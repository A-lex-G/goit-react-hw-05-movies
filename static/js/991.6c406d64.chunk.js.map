{"version":3,"file":"static/js/991.6c406d64.chunk.js","mappings":"0MAEaA,E,QAAaC,EAAAA,GAAH,yH,SCEVC,EAAa,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,eACnCC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,UAACN,EAAD,WAEKG,GAAkBA,EAAeI,KAAI,SAAAC,GAAK,OACvC,yBAEI,SAAC,KAAD,CACIC,GAAE,iBAAYD,EAAME,IACpBC,MAAO,CAAEC,KAAMP,GAFnB,SAGKG,EAAMK,SAJNL,EAAME,GAFwB,IAW1CN,GAAkBA,EAAeG,KAAI,SAAAC,GAAK,OACvC,yBAEI,SAAC,KAAD,CACIC,GAAE,UAAKD,EAAME,IACbC,MAAO,CAAEC,KAAMP,GAFnB,SAGKG,EAAMK,SAJNL,EAAME,GAFwB,MAYtD,C,8ECjCM,IAAMI,EAAM,gCACNC,EAAU,kC,0LCCVC,EAAkBf,EAAAA,EAAAA,KAAH,4OAYfgB,EAAqBhB,EAAAA,EAAAA,OAAH,mXAkBlBiB,EAAoBjB,EAAAA,EAAAA,MAAH,wM,SC7BjBkB,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAExB,OACI,UAACJ,EAAD,CACII,SAAUA,EADd,WAGI,SAACF,EAAD,CACIG,KAAK,OACLC,YAAY,gBACZC,KAAO,aAEX,SAACN,EAAD,CACII,KAAK,SADT,UAEI,0BAAO,eAMtB,EC4BD,EA3Ce,WAAO,IAAD,EACjB,GAAwCG,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAU,UAAGL,EAAaM,IAAI,gBAApB,QAAgC,IAEhDC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,yFACuB,KAAfF,EADR,0EAMuCG,EAAAA,EAAAA,IAAA,UAAanB,EAAAA,EAAb,gCAAwCC,EAAAA,EAAxC,kBAAyDe,IANhG,gBAMqBI,EANrB,EAMeC,KAAMD,QACbL,EAAkBK,GAP1B,kDASQE,QAAQC,IAAR,MATR,2DAFY,uBAAC,WAAD,wBAcZC,EAEH,GAAE,CAACR,IAUJ,OACI,iCACI,SAACX,EAAD,CACIoB,MAAOT,EACPV,SAZS,SAAAoB,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACPJ,EAAUG,EAAKE,SAASC,QAAxBN,MACRb,EAAgB,CAAEoB,MAAOP,IACzBG,EAAKK,OACR,KAQO,SAAC,IAAD,CACI3C,eAAgBwB,MAI/B,C","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","helpers.js","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const StyledList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    // align-items: center;\n    row-gap: 5px;\n`","import PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { StyledList } from './MovieList.styled';\n\nexport const MoviesList = ({ trendingMovies, selectedMovies }) => {\n    const location = useLocation();\n    \n    return (\n        <StyledList>\n\n            {trendingMovies && trendingMovies.map(movie =>\n                <li\n                    key={movie.id}> \n                    <Link\n                        to={`movies/${movie.id}`}\n                        state={{ from: location }}>\n                        {movie.title}\n                    </Link>\n                </li>\n            )}\n\n            {selectedMovies && selectedMovies.map(movie =>\n                <li\n                    key={movie.id}> \n                    <Link\n                        to={`${movie.id}`}\n                        state={{ from: location }}>\n                        {movie.title}\n                    </Link>\n                </li>)}\n            \n        </StyledList>\n    )\n}\n\nMoviesList.propTypes = {\n    trendingMovies: PropTypes.array,\n    selectedMovies: PropTypes.array,\n}","export const URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '64aba4d0a2ac3bd79e8071c6bbb0c175';","import styled from \"@emotion/styled\";\n\nexport const StyledSearchBar = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    margin: 10px;\n    border: 1px solid grey;\n`;\n\nexport const StyledSearchButton = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    \n    :hover {\n        opacity: 1;\n    }\n`;\n\nexport const StyledSearchInput = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n`;","import PropTypes from 'prop-types';\nimport { StyledSearchBar, StyledSearchButton,StyledSearchInput } from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n\n    return (\n        <StyledSearchBar\n            onSubmit={onSubmit}\n        >\n            <StyledSearchInput\n                type=\"text\"\n                placeholder=\"search movies\"\n                name = \"request\"\n            />\n            <StyledSearchButton\n                type=\"submit\" >\n                <span >\n                    Search\n                </span>\n            </StyledSearchButton>\n        </StyledSearchBar>\n    )\n}\n\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { URL, API_KEY } from \"helpers\";\nimport { MoviesList } from \"components/MovieList/MovieList\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { SearchBar } from \"components/SearchBar/SearchBar\";\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setSelectedMovies] = useState([]);\n    const movieTitle = searchParams.get('query') ?? \"\";\n    \n    useEffect(() => {\n\n        async function getRequstedMovie() {\n            if (movieTitle === \"\") {\n                return\n            }\n\n            try {\n                const {data:{results}} = await axios.get(`${URL}search/movie?api_key=${API_KEY}&query=${movieTitle}`);\n                setSelectedMovies(results);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getRequstedMovie()\n\n    }, [movieTitle])\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        const { value } = form.elements.request;\n        setSearchParams({ query: value });\n        form.reset();\n    }\n\n    return (\n        <>\n            <SearchBar\n                value={movieTitle}\n                onSubmit={handleSubmit}\n            />\n            <MoviesList\n                selectedMovies={movies}\n            />\n        </>\n    )\n}\nexport default Movies;"],"names":["StyledList","styled","MoviesList","trendingMovies","selectedMovies","location","useLocation","map","movie","to","id","state","from","title","URL","API_KEY","StyledSearchBar","StyledSearchButton","StyledSearchInput","SearchBar","onSubmit","type","placeholder","name","useSearchParams","searchParams","setSearchParams","useState","movies","setSelectedMovies","movieTitle","get","useEffect","axios","results","data","console","log","getRequstedMovie","value","e","preventDefault","form","currentTarget","elements","request","query","reset"],"sourceRoot":""}