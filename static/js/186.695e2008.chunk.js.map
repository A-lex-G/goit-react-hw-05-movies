{"version":3,"file":"static/js/186.695e2008.chunk.js","mappings":"yOAwCA,UAnCgB,WACZ,IACQA,GADOC,EAAAA,EAAAA,MACPD,QACR,GAA6BE,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,+GAE4CC,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,EAAb,iBAAyBP,EAAzB,4BAAoDQ,EAAAA,IAFhG,gBAEwBC,EAFxB,EAEgBC,KAAQD,QAChBL,EAAUK,GAHlB,gDAKQE,QAAQC,MAAR,MALR,0DADY,uBAAC,WAAD,wBASZC,EACH,GAAE,CAACb,KAGA,wBACKG,EAAQW,OAAS,EACZX,EAAQY,KAAI,SAAAC,GAAI,OACd,2BAEI,wBACKA,EAAKC,UAEV,uBACKD,EAAKE,YALLF,EAAKG,GAFA,IAUhB,4CAGjB,C,8ECtCM,IAAMZ,EAAM,gCACNC,EAAU,kC","sources":["components/Reviews/Reviews.jsx","helpers.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { URL, API_KEY } from \"helpers\";\n\nconst Reviews = () => {\n    const params = useParams();\n    const { movieId } = params;\n    const [reviews, setReview] = useState([]);\n\n    useEffect(() => {\n        async function getReviews() {\n            try {\n                const { data: { results } } = await axios.get(`${URL}movie/${movieId}/reviews?api_key=${API_KEY}`);\n                setReview(results);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n        getReviews();\n    }, [movieId])\n\n    return (\n        <ul>\n            {reviews.length > 0\n                ? reviews.map(item =>\n                    <li\n                        key={item.id}>\n                        <h5>\n                            {item.author}\n                        </h5>\n                        <p>\n                            {item.content}\n                        </p>\n                    </li>)\n                : \"We don't have any reviews for this movie\"}\n        </ul>\n    )\n};\n\nexport default Reviews;","export const URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '64aba4d0a2ac3bd79e8071c6bbb0c175';"],"names":["movieId","useParams","useState","reviews","setReview","useEffect","axios","URL","API_KEY","results","data","console","error","getReviews","length","map","item","author","content","id"],"sourceRoot":""}